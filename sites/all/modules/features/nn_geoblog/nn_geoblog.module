<?php

include_once('nn_geoblog.features.inc');

/**
 * Implements hook_form_alter()
 */
function nn_geoblog_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'story_node_form') {
    drupal_add_css(drupal_get_path('module', 'nn_geoblog') . '/nn_geoblog.css');
  }

  if ($form_id == 'block_admin_configure') {
    $form['#submit'][] = 'nn_geoblog_remove_blockid';
  }
} // nn_geoblog_form_alter()

function nn_geoblog_remove_blockid($form, &$form_state) {
  $comparison_fields = array(
    'title' => $form['block_settings']['title']['#default_value'],
    'info' => $form['block_settings']['info']['#default_value'],
    'body' => $form['block_settings']['body_field']['body']['#default_value'],
  );
  foreach ($comparison_fields as $field => $value) {
    // important setting changed, clear the machine name so the block cannot be reverted.
    if ($form_state['values'][$field] != $value) {
      $form_state['values']['machine_name'] = '';
      return;
    }
  }
} // nn_geoblog_remove_blockid()

/**
 * Implements hook_nodeapi()
 */
function nn_geoblog_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'story' && ($op == 'update' || $op == 'insert')) {
    $location = $node->field_location[0];

    if (!empty($location['street'])
      && empty($location['locpick']['user_latitude'])
      && empty($location['locpick']['user_longitude'])
      && (!empty($location['latitude']) && $location['latitude'] != 0)
      && (!empty($location['longitude']) && $location['longitude'] != 0)) {
      drupal_set_message(t('The text location you entered has been placed on the map! If the map point is not where you intended, you may <a href="@edit-url">edit this page</a> and refine the location text or reposition the point on the map.', array('@edit-url' => url('node/' . $node->nid . '/edit'))));
    }

    if (!empty($location['street'])
      && empty($location['locpick']['user_latitude'])
      && empty($location['locpick']['user_longitude'])
      && (empty($location['latitude']) || $location['latitude'] == 0)
      && (empty($location['longitude']) || $location['longitude'] == 0)) {
      drupal_set_message(t('The text location you entered could not be placed on the map! Please <a href="@edit-url">edit this page</a> and refine the location text, enter the full street address or place a point directly on the map.', array('@edit-url' => url('node/' . $node->nid . '/edit'))), 'error');
    }
      
  } // if story update or story insert
} // nn_geoblog_nodeapi()

/**
 * Implements hook_user()
 */
function nn_geoblog_user($op, &$edit, &$account, $category = NULL) {
  // run on validate for new accounts so we can change the username prior to throwing a duplicate username error.
  if ($op == 'validate' && !isset($account->uid)) {
    // if rpx data exists, then we're registering via rpx.
    if ($rpx_data = rpx_core_get_rpx_session()) {

      // load existing names.
      $result = db_query('SELECT name FROM {users} WHERE name LIKE \'%s%%\'', $account->name);
      $existing_names = array();
      while ($row = db_fetch_array($result)) {
        $existing_names[] = $row['name'];
      }

      for ($i = 0; $i < count($existing_names) + 1; $i++) {
        $new_name = ($i == 0)? $account->name : $account->name . $i;

        if (!in_array($new_name, $existing_names)) {
          $regex = '/^The name .+ is already taken.$/';

          // get errors.
          $errors = form_get_errors();
          if (is_array($errors) && count($errors)) {
            form_set_error(null, null, true);
            // reset applicable errors.
            foreach ($errors as $field => $message) {
              if ($field != 'name' && !preg_match($regex, $message)) form_set_error($field, $message);
            }
          }

          // get messages.
          $messages = drupal_get_messages('error');
          if (is_array($messages['error']) && count($messages['error'])) {
            // reset applicable messages.
            foreach ($messages['error'] as $message) {
              if (!preg_match($regex, $message)) drupal_set_message($message, 'error');
            }
          }

          $account->name = $new_name;
          $edit['name'] = $new_name;
          return;

        } // if name not taken.
      } // for.
    } // if rpx data.
  } // if validating a new user.

  // when updating user
  if ($op == 'after_update') {
    // force reset of rpx data if it exists
    if ($rpx_data = rpx_core_get_rpx_session()) {
      $data['profile_firstname'] = $rpx_data['profile']['name']['givenName'];
      $data['profile_lastname'] = $rpx_data['profile']['name']['familyName'];
      // note this will not work if profile field is set to hidden
      profile_save_profile($data, $account, 'User Information');
    } // if rpx data.
  } // if update.

} // nn_geoblog_user()
